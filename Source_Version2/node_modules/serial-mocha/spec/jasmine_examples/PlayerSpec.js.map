{"version":3,"sources":["spec/jasmine_examples/PlayerSpec.js"],"names":[],"mappings":";;AAAA,QAAQ,CAAC,QAAQ,EAAE,YAAW;AAC5B,MAAI,MAAM,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;AAC1D,MAAI,IAAI,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AACtD,MAAI,MAAM,CAAC;AACX,MAAI,IAAI,CAAC;;AAET,YAAU,CAAC,YAAW;AACpB,UAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AACtB,QAAI,GAAG,IAAI,IAAI,EAAE,CAAC;GACnB,CAAC,CAAC;;AAEH,IAAE,CAAC,+BAA+B,EAAE,YAAW;AAC7C,UAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClB,UAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;;AAGlD,UAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;GAClC,CAAC,CAAC;;AAEH,UAAQ,CAAC,2BAA2B,EAAE,YAAW;AAC/C,cAAU,CAAC,YAAW;AACpB,YAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClB,YAAM,CAAC,KAAK,EAAE,CAAC;KAChB,CAAC,CAAC;;AAEH,MAAE,CAAC,mDAAmD,EAAE,YAAW;AACjE,YAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;;;AAGrC,YAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACtC,CAAC,CAAC;;AAEH,MAAE,CAAC,8BAA8B,EAAE,YAAW;AAC5C,YAAM,CAAC,MAAM,EAAE,CAAC;AAChB,YAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;AACtC,YAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACnD,CAAC,CAAC;GACJ,CAAC,CAAC;;;AAGH,IAAE,CAAC,2DAA2D,EAAE,YAAW;AACzE,SAAK,CAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC;;AAErC,UAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClB,UAAM,CAAC,YAAY,EAAE,CAAC;;AAEtB,UAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;GAC/D,CAAC,CAAC;;;AAGH,UAAQ,CAAC,SAAS,EAAE,YAAW;AAC7B,MAAE,CAAC,sDAAsD,EAAE,YAAW;AACpE,YAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAElB,YAAM,CAAC,YAAW;AAChB,cAAM,CAAC,MAAM,EAAE,CAAC;OACjB,CAAC,CAAC,YAAY,CAAC,yBAAyB,CAAC,CAAC;KAC5C,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"spec/jasmine_examples/PlayerSpec.js","sourcesContent":["describe(\"Player\", function() {\n  var Player = require('../../lib/jasmine_examples/Player');\n  var Song = require('../../lib/jasmine_examples/Song');\n  var player;\n  var song;\n\n  beforeEach(function() {\n    player = new Player();\n    song = new Song();\n  });\n\n  it(\"should be able to play a Song\", function() {\n    player.play(song);\n    expect(player.currentlyPlayingSong).toEqual(song);\n\n    //demonstrates use of custom matcher\n    expect(player).toBePlaying(song);\n  });\n\n  describe(\"when song has been paused\", function() {\n    beforeEach(function() {\n      player.play(song);\n      player.pause();\n    });\n\n    it(\"should indicate that the song is currently paused\", function() {\n      expect(player.isPlaying).toBeFalsy();\n\n      // demonstrates use of 'not' with a custom matcher\n      expect(player).not.toBePlaying(song);\n    });\n\n    it(\"should be possible to resume\", function() {\n      player.resume();\n      expect(player.isPlaying).toBeTruthy();\n      expect(player.currentlyPlayingSong).toEqual(song);\n    });\n  });\n\n  // demonstrates use of spies to intercept and test method calls\n  it(\"tells the current song if the user has made it a favorite\", function() {\n    spyOn(song, 'persistFavoriteStatus');\n\n    player.play(song);\n    player.makeFavorite();\n\n    expect(song.persistFavoriteStatus).toHaveBeenCalledWith(true);\n  });\n\n  //demonstrates use of expected exceptions\n  describe(\"#resume\", function() {\n    it(\"should throw an exception if song is already playing\", function() {\n      player.play(song);\n\n      expect(function() {\n        player.resume();\n      }).toThrowError(\"song is already playing\");\n    });\n  });\n});\n"],"sourceRoot":"/source/"}