{"version":3,"sources":["lib/runFork.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;AACb,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC;IAChC,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACxC,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC;IACxC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC;;AAE/C,MAAM,CAAC,OAAO,GAAG,UAAC,IAAI,EAAC,WAAW,EAAC,QAAQ;QAAI,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAI;AAC7E,UAAQ,GAAC,QAAQ,GAAC,MAAM,GAAC,OAAO,CAAC;AAClC,cAAY,CAAC;AACb,MAAI,OAAO,GAAG;;;;;;;;GAQb,CAAA;AACD,MAAI,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,SAAS,GAAC,WAAW,EAAE,CAAE,IAAI,EAAC,WAAW,EAAC,QAAQ,CAAC,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;AACrG,OAAK,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,MAAM,EAAG;;AAE1B,UAAO,CAAC,OAAO,CAAC,CAAA;GAAC,CACjB,CAAC;AACF,OAAK,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,UAAU,EAAG;;;;;;;;;;;;;;;;;;AAkBjC,OAAG,UAAU,CAAC,IAAI,KAAG,WAAW,EAAC;;AAEhC,WAAO,GAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACvC;GACD,CAAC,CAAC;AACH,OAAK,CAAC,EAAE,CAAC,OAAO,EAAC,UAAC,KAAK;UAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;GAAA,CAAC,CAAC;EAC9C,CAAC;CAAA,CAAA","file":"lib/runFork.js","sourcesContent":["/**\n * module runFork\n *\n */\n'use strict';\nvar Promise = require(\"bluebird\"),\n\tfs = Promise.promisifyAll(require(\"fs\")),\n\tchild_process = require(\"child_process\"),\n\tutil = require(\"util\"),\n\tEventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = (file,theReporter,saveData)=> new Promise((resolve, reject)=> {\n\t saveData=saveData?\"TRUE\":\"FALSE\";\n\t\"use strict\";\n\tlet results = {\n\t\t//mochaStarted: [],\n\t\t//suiteStarted: new Map(),\n\t\t//specStarted : new Map(),\n\t\t//specDone    : new Map(),\n\t\t//suiteDone   : [],\n\t\t//mochaDone   : []\n\n\t}\n\tlet child = child_process.fork(__dirname+\"/runMocha\", [ file,theReporter,saveData], {silent: false});\n\tchild.on(\"exit\", (signal)=>{\n\t\t//console.log(\"got exit\",results);\n\t\tresolve(results)}\n\t);\n\tchild.on(\"message\", (messageObj)=>{\n\t\t//console.log(\"got message\",messageObj);\n\t\t//switch (messageObj.type){\n\t\t//\tcase \"mochaStarted\":{\n\t\t//\t\tresults.mochaStarted.push(messageObj.message);\n\t\t//\t\tbreak;\n\t\t//\t}\n\t\t//\tcase \"suiteStarted\": {\n\t\t//\t\t\tresults.suiteStarted.set(messageObj.message.title, messageObj.message);\n\t\t//\t\tbreak;\n\t\t//\t\t}case \"specDone\": {\n\t\t//\t\t\tresults.specDone.set(messageObj.message.title, {testName:messageObj.message.title,status:messageObj.message.status,reason:messageObj.message.error?messageObj.message.error:\"\"});\n\t\t//\t\tbreak;\n\t\t//\t\t}\n\t\t//case \"suiteDone\": {\n\t\t//\tresults.suiteDone.push(messageObj.message);\n\t\t//\t\tbreak;\n\t\t//\t\t}\n\t\tif(messageObj.type==='mochaDone'){\n\t\t//console.log(\"got message\",messageObj);\n\t\t\tresults=JSON.parse(messageObj.message);\n\t\t}\n\t});\n\tchild.on(\"error\",(error)=>console.log(error));\n})\n\n\n\n"],"sourceRoot":"/source/"}